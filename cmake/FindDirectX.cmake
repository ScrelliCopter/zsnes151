macro (_get_program_files_x86_root OUTPUT)
	set(_PROGRAMFILESX86 "ProgramFiles(x86)")
	set(${OUTPUT} "$ENV{${_PROGRAMFILESX86}}")
	if (NOT ${OUTPUT})
		set(${OUTPUT} "$ENV{ProgramFiles}")
	endif()
	unset(_PROGRAMFILESX86)
endmacro()

macro (_get_directx_paths OUTPUT)
	set(${OUTPUT} "$ENV{DXSDK_DIR}")
	_get_program_files_x86_root(_PROGRAMFILES_ROOT)
	foreach (I
			"February 2010"
			"August 2009" "March 2009"
			"November 2008" "August 2008" "June 2008" "March 2008"
			"November 2007" "August 2007" "June 2007" "April 2007" "February 2007"
			"December 2006" "October 2006" "August 2006" "June 2006" "April 2006" "February 2006"
			"December 2005")
		list(APPEND ${OUTPUT} "${_PROGRAMFILES_ROOT}\\Microsoft DirectX SDK (${I})")
	endforeach()
	foreach (I
			"October 2005" "August 2005" "June 2005" "April 2005" "February 2005"
			"December 2004" "October 2004" "Summer 2004")
		list(APPEND ${OUTPUT} "${_PROGRAMFILES_ROOT}\\Microsoft DirectX 9.0 SDK (${I})")
	endforeach()
	unset(_PROGRAMFILES_ROOT)
	list(APPEND ${OUTPUT} "C:\\DX90SDK")
	list(APPEND ${OUTPUT} "C:\\DXSDK")
endmacro()

if (CMAKE_SYSTEM_NAME STREQUAL "Windows")
	foreach (COMPONENT ${DirectX_FIND_COMPONENTS})
		string(TOUPPER ${COMPONENT} _COMPONENT)
		set(DirectX_USE_${_COMPONENT} YES)
		mark_as_advanced(DirectX_USE_${_COMPONENT})
		unset(_COMPONENT)
	endforeach()

	_get_directx_paths(_DIRECTX_SEARCHPATHS)
	set(_DIRECTX_INCLUDE_SUFFIXES Include)
	# Cool bug fac't: Microsoft DirectX 9.0 SDK (October 2005) switches x86 libdir from Lib to Lib/x86
	set(_DIRECTX_LIBRARY_SUFFIXES Lib/x86 Lib)
	if (DirectX_USE_DINPUT8)
		find_library(DirectX_dinput8_LIBRARY dinput8.lib PATHS ${_DIRECTX_SEARCHPATHS} PATH_SUFFIXES ${_DIRECTX_LIBRARY_SUFFIXES})
		if (DirectX_dinput8_LIBRARY)
			add_library(DirectX::dinput8 UNKNOWN IMPORTED)
			set_property(TARGET DirectX::dinput8 PROPERTY IMPORTED_LOCATION "${DirectX_dinput8_LIBRARY}")
			set(DirectX_dinput8_FOUND YES)
			mark_as_advanced(DirectX_dinput8_FOUND)
		endif()
		mark_as_advanced(DirectX_dinput8_LIBRARY)
	endif()
	if (DirectX_USE_DDRAW)
		find_path(DirectX_ddraw_INCLUDE_DIR ddraw.h PATHS ${_DIRECTX_SEARCHPATHS} PATH_SUFFIXES ${_DIRECTX_INCLUDE_SUFFIXES})
		if (DirectX_ddraw_INCLUDE_DIR)
			add_library(_ddraw INTERFACE)
			add_library(DirectX::ddraw ALIAS _ddraw)
			target_include_directories(_ddraw INTERFACE "${DirectX_ddraw_INCLUDE_DIR}")
			set(DirectX_ddraw_FOUND YES)
			mark_as_advanced(DirectX_ddraw_FOUND)
		endif()
		mark_as_advanced(DirectX_ddraw_INCLUDE_DIR)
	endif()
	if (DirectX_USE_DSOUND)
		find_path(DirectX_dsound_INCLUDE_DIR dsound.h PATHS ${_DIRECTX_SEARCHPATHS} PATH_SUFFIXES ${_DIRECTX_INCLUDE_SUFFIXES})
		if (DirectX_dsound_INCLUDE_DIR)
			add_library(_dsound INTERFACE)
			add_library(DirectX::dsound ALIAS _dsound)
			target_include_directories(_dsound INTERFACE "${DirectX_dsound_INCLUDE_DIR}")
			set(DirectX_dsound_FOUND YES)
			mark_as_advanced(DirectX_dsound_FOUND)
		endif()
		mark_as_advanced(DirectX_dsound_INCLUDE_DIR)
	endif()
	if (DirectX_USE_DXGUID)
		find_library(DirectX_dxguid_LIBRARY dxguid.lib PATHS ${_DIRECTX_SEARCHPATHS} PATH_SUFFIXES ${_DIRECTX_LIBRARY_SUFFIXES})
		if (DirectX_dxguid_LIBRARY)
			add_library(DirectX::dxguid UNKNOWN IMPORTED)
			set_property(TARGET DirectX::dxguid PROPERTY IMPORTED_LOCATION "${DirectX_dxguid_LIBRARY}")
			set(DirectX_dxguid_FOUND YES)
			mark_as_advanced(DirectX_dxguid_FOUND)
		endif()
		mark_as_advanced(DirectX_dxguid_LIBRARY)
	endif()
	unset(_DIRECTX_LIBRARY_SUFFIXES)
	unset(_DIRECTX_INCLUDE_SUFFIXES)
	unset(_DIRECTX_SEARCHPATHS)

	include(FindPackageHandleStandardArgs)
	find_package_handle_standard_args(DirectX
		FOUND_VAR DirectX_FOUND
		# Workaround for 3.17 and earlier
		REQUIRED_VARS DirectX_FIND_COMPONENTS
		HANDLE_COMPONENTS)
	mark_as_advanced(DirectX_FOUND)
endif()
